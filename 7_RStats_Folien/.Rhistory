Als ersten Schritt sollten Sie sich immer die Daten genau anschauen. Gute Funktionen hierfür sind `str()`, `dim()` und in RStudio `View()`.
```{r select 1, echo=TRUE, eval=TRUE}
str(ece_org)
```
---
# Daten aufbereiten mit select()
Mit `str()` sind schon ein paar der nächsten Schritte erkennbar:
* Es gibt Variablen die wir nicht brauchen wie `SEX` und `UNIT`.
*(Eurostat produziert die 2 Variablen automatisch, hätten wir unterschiedliche Altersklassen ausgewählt oder die Betreuungsquote zB in absoluten Zahlen, bräuchten wir die zwei Variablen.)*
* Die Betreuungsquoten befinden sich in `Value`, das sollte im Variablennamen auch schnell erkennbar sein.
* `Value` ist ein character vector.  Die Werte sind eigentlich numerisch.
* Es gibt ein paar Werte in `GEO` die keine Länder sind (zB EU).
* Haben wir für alle Länder die Betreuungsquotendaten für die gleichen Jahre?
---
# Daten aufbereiten mit select()
Mit `select()` können wir alle Variablen (Spalten), die wir auch wirklich brauchen, in einem neuen Dataframe speichern:
* Der Vorteil mit `select()` aus dplyr ist, dass wir mit dem Variablennamen arbeiten können.
* Der Funktion kann entweder mit oder ohne `%>%` durchgeführt werden:
```{r select 2, echo=TRUE}
# Nur notwendinge Variablen auswählen mit select()
ece <- select(ece_org, TIME, GEO, Value)
# Kann auch mit %>% geschrieben werden
ece <- ece %>%
select(TIME, GEO, Value)
# Per - kopiert select alle Variablen außer die Ausgewählten
ece <- select(ece_org, -SEX, -UNIT)
```
---
# Daten aufbereiten mit filter()
In der Variable `GEO` befinden sich nicht nur Länder, sondern auch kumulierte Werte für die EU. Für den Ländervergleich benötigen wir diese Werte nicht.
```{r filter 1, echo=TRUE, eval=TRUE}
# unique() zeigt alle Ausprägungen der Variable
unique(ece$GEO)
```
---
# Daten aufbereiten mit filter()
Wie immer in R gibt es unterschiedliche Schreibweisen die zum gleichen Ergebnis führen.
```{r filter 2, echo=TRUE, eval=TRUE}
ece <- filter(ece,
GEO != "European Union - 27 countries (from 2020)" &
GEO != "European Union - 28 countries (2013-2020)")
ece <- ece %>%
filter(! GEO %in%
c("European Union - 27 countries (from 2020)",
"European Union - 28 countries (2013-2020)"))
```
Zur Erinnerung:
* `!=` heißt in R ungleich, also nimmt `filter()` alle Zeilen außer die Zeilen, welche die zwei EU-Bezeichnungen beinhalten.
* `&` ist *und*  `|` ist *oder*
* Mit `!` (gesprochen NOT) kann eine logischen Aussage "umgedreht" werden.
* `%in%`  filtert mit Elementen aus einer Menge `c()`.
---
# Daten aufbereiten: Variablen manipulieren
Der große Vorteil von `%>%` ist, dass man mehrere Funktionen hintereinander setzen kann. Die Funktion nach `%>%` arbeitet mit dem Dataframe das aus der vorherigen Funktion resultiert. Damit machen wir mehrere Schritte in einem Befehl:
* Mit `rename()` benennen wir unsere Hauptvariable um.
* Mit `mutate()` erstellen wir eine neue Variable, da die aber so heißt wie unsere Hauptvariable wird diese überschrieben.
* Mit `as.numeric()` überschreiben `ece_o4y` mit einer numerischen Version derselben Variable.
* Bei der Änderung zu einer numerischen Variable werden alle Werte die keine Zahl sind als `NA` gesetzt (im Original waren fehlende Werte mit `:` definiert).
* Mit `drop_na()` löschen wir alle Zeilen, also Länder-Jahre, die keinen Wert für die Betreuungsquote haben.
* Als wir mit `unique()` die Ländernamen angeschaut haben, haben wir gesehen, dass es einen Ländernamen mit Leerzeichen gibt. R arbeitet am besten wenn character-Werte und Objektnamen nur aus Buchstaben, `_` und Zahlen (nicht als erstes Zeichen) bestehen.
---
# Daten aufbereiten: Variablen manipulieren
```{r manipulate, echo=TRUE}
ece <- ece %>%
rename(ece_o4y = Value) %>%
mutate(ece_o4y = as.numeric(ece_o4y)) %>%
drop_na(ece_o4y) %>%
mutate(GEO = recode(GEO, "Germany (until 1990 former territory of the FRG)" = "Germany"))
```
---
# Daten aufbereiten: Daten sortieren & strukturieren
Für die Datenanalyse ist es egal in welcher Reihenfolge die Zeilen oder Spalten sind. Aber manchmal ist es doch einfacher wenn der Datensatz alphabetisch, absteigend oder aufsteigend angeordnet ist.
`arrange()` kann mit mehreren Variablennamen arbeiten. Es ordnet zuerst nach der ersten Variable und dann nach der zweiten Variable, d.h. alle gleichen Werte der ersten Variable werden nach der zweiten Variable angeordnet. Hier zuerst alphabetisch nach dem Ländernamen `GEO` dann aufsteigend nach der Jahreszahl `TIME`.
```{r arrange, echo=TRUE}
# Nach Ländernamen und Jahren sortieren
ece <- ece %>%
arrange(GEO, TIME)
```
---
# Daten aufbereiten: Gruppieren & Zusammenfassen
Beim Blick über die Daten gibt es erste Anzeichen, dass nicht alle Länder Daten für alle Jahre im Sample haben. Um jedes Jahr vergleichen zu können, brauchen wir einen Datensatz der für jedes Jahr Daten für alle Länder hat.
* Mit `group_by()` wird der Datensatz je Land gruppiert.
* Alle folgende Berechnung werden innerhalb der Gruppen angewendet.
* Mit `summarise()` können unterschiedliche Kennzahlen berechnet werden:
* Wird vorher nicht gruppiert wird die Kennzahl für das ganze Datenframe berechnet.
* Wird vorher gruppiert wird pro Gruppe die Kennzahl berechnet.
---
# Daten aufbereiten: Gruppieren & Zusammenfassen
```{r summarise, echo=TRUE}
# für welche Jahre haben wie Daten pro Jahr?
sum_ece <- ece %>%
group_by(GEO) %>%
summarise(min_year = min(TIME),
max_year = max(TIME),
range_year = (max(TIME) - min(TIME)),
n_observations = n()) %>%
arrange(n_observations) %>%
ungroup()
```
`summarise()` funktioniert auch mit `mean()`.
---
# Daten aufbereiten: Gruppieren & Zusammenfassen
```{r summarise 2, echo=TRUE}
sum_ece
```
---
# Daten aufbereiten: Gruppieren & Zusammenfassen
```{r summarise 3, echo=TRUE}
# nur Länder mit 10 Beobachtungen von 2008 bis 2017 behalten
ece <- ece %>%
group_by(GEO) %>%
mutate(n_observations = n()) %>%
filter(n_observations == 10) %>%
select(-n_observations) %>%
ungroup()
```
---
# tidy Data
Für Datenanalyse benötigt es tidy data (= aufgeräumte Datensätze):
* Jede Spalte hat einem Variablennamen und alle Spalten haben die gleiche Länge (rechteckiges Dataframe).
* Jede Zeile ist eine eine Beobachtung (zB Länder-Jahr) und jede jede Spalte eine Variable.
* Fehlende Werte sind als missing definiert (NA).
* Daten sind nicht von Hand kodieren, sondern nachvollziehbar mit R Skripten.
* Variablennamen sind ohne Sonderzeichen und Leerzeichen
NUR ZIFFERN, BUCHSTABEN oder UNTERSTRICHE
* Variablennamen beginnen nicht mit einer Zahl.
---
# tidy Data
**Jede Zeile eine Beobachtung, jede Spalte eine Variable, jede Zelle ein Wert**.
```{r tidy, echo = FALSE, out.width = "90%", fig.pos= 'h'}
knitr::include_graphics("figures/tidy-1.png ")
```
.footnote[Source: https://r4ds.had.co.nz/tidy-data.html]
---
# Nächste Schritte
Mit tidy Daten können wir als nächstes zB den zeitlichen Verlauf der Betreuungsquote von ausgewählten Ländern visualisieren:
```{r visual 1, echo=TRUE}
plot1 <- ece %>%
filter(GEO %in% c("Austria", "Germany", "Italy")) %>%
ggplot(aes(x = TIME, y = ece_o4y)) +
geom_line(aes(group = GEO, colour = GEO)) +
geom_point(aes(colour = GEO)) +
scale_x_continuous(breaks = unique(ece$TIME)) +
labs(title = "Kinder (4 Jahren - Schulpflichtalter) in formaler Betreuung",
y = "formale Betreuungsquote in %",
x = "Jahre",
colour = "Länder")
ggsave(filename = "plot1.png", path = "output" )
```
---
class: centre, middle
```{r visual 2, echo=FALSE,  out.width = "80%", fig.pos= 'h' }
knitr::include_graphics("output/plot1.png ")
```
---
# Nächste Schritte
oder die Betreuungsquote aller Länder im Jahr 2017 vergleichen:
```{r visual 3, echo=TRUE}
plot2 <- ece%>%
filter(TIME == 2017) %>%
ggplot(aes(x = reorder(GEO, ece_o4y), y = ece_o4y)) +
geom_bar(stat = "identity") +
labs(title = "Kinder (4 Jahren - Schulpflichtalter) in formaler Betreuung (2017)",
y = "formale Betreuungsquote in %",
x = "Länder") +
theme(axis.text.x = element_text(angle = 90))
ggsave(filename = "plot2.png", path = "output" )
```
---
class: centre, middle
```{r visual 4, echo=FALSE,  out.width = "80%", fig.pos= 'h' }
knitr::include_graphics("output/plot2.png ")
```
---
# Übung 6 (6 ist das neue 5)
* Laden Sie von moodle den OECD Datensatz "SOCX_AGG_31032020142101957.csv" herunter.
* Bearbeiten Sie den Datensatz, so dass Sie ein tidy dataset bekommen.
* Berechnen Sie die durchschnittlichen Ausgaben für Familienpolitik in Österreich im Zeitraum 2000 - 2015.
* Welche fünf Länder haben im Jahr 2010 am meisten für Familienpolitik ausgegeben (in % des BIPs)?
* Speichern Sie die Ergebnisse als # Kommentar im Skript.
* Ihr R Skript sollte alle verwendeten Funktionen beinhalten (lassen Sie ihr fertiges R Skript am Ende nochmal komplett durchlaufen. Falls Sie einen Fehler erhalten, beheben Sie diesen).
**Laden Sie Ihr R Skript bis spätestens 22.04. 12:00 auf moodle hoch**
library(tidyverse)
socx_data <- read_csv("_raw/SOCX_AGG_31032020142101957.csv") # import dataframe
library(tidyverse)
# clean data
socx_data <- socx_data %>%             # select dataframe and replace dataframe
select(COUNTRY, YEAR, Value) %>%     # select essential variables
rename(fampol_exp_total_pct = Value) # rename Value Variable based in information in other variables
library(tidyverse)
library(tidyverse)
cws_data <- read_excel("_raw/CWS-data-2020.xlsx")
cws_data <- read_excel("_raw/CWS-data-2020.xlsx")
library(readxl)
cws_data <- read_excel("_raw/CWS-data-2020.xlsx")
knitr::include_graphics("figures/nykd2uzwy74z.jpg")
knitr::include_graphics("figures/dplyr.jpeg")
knitr::include_graphics("figures/tidy-1.png ")
library(tidyverse)
library(readxl)
cws_data <- read_excel("_raw/CWS-data-2020.xlsx")
library(tidyverse)
library(readxl)
cws_data <- read_excel("_raw/CWS-data-2020.xlsx")
View(cws_data)
library(tidyverse)
rm(list =ls())
socx_data <- read_csv("_raw/SOCX_AGG_20042020191205895.csv")
View(socx_data)
unique(socx_data$`Type of Expenditure`)
socx_data <- socx_data %>%
recode("Total" = "total", "Cash benefits" = "cash", "Benefits in kind" = "services")
socx_data <- socx_data %>%
recode(`Type of Expenditure`, "Total" = "total", "Cash benefits" = "cash", "Benefits in kind" = "services")
socx_data <- recode(socx_data$`Type of Expenditure`, "Total" = "total", "Cash benefits" = "cash", "Benefits in kind" = "services")
recode(socx_data$`Type of Expenditure`, "Total" = "total", "Cash benefits" = "cash", "Benefits in kind" = "services")
recode(`Type of Expenditure`, "Total" = "total", "Cash benefits" = "cash", "Benefits in kind" = "services")
socx_data %>% recode(`Type of Expenditure`, "Total" = "total", "Cash benefits" = "cash", "Benefits in kind" = "services")
socx_data <- socx_data %>%
mutate(`Type of Expenditure` = recode(`Type of Expenditure`, "Total" = "total", "Cash benefits" = "cash", "Benefits in kind" = "services"))
library(tidyverse)
socx_data <- socx_data %>%
mutate(`Type of Expenditure` = recode(`Type of Expenditure`, "Total" = "total", "Cash benefits" = "cash", "Benefits in kind" = "services"))
socx_data <- read_csv("_raw/SOCX_AGG_20042020191205895.csv")
socx_data <- socx_data %>%
mutate(`Type of Expenditure` = recode(`Type of Expenditure`, "Total" = "total", "Cash benefits" = "cash", "Benefits in kind" = "services"))
unique(socx_data$`Type of Expenditure`)
socx_data <- socx_data %>%
mutate(`Type of Expenditure` = recode(`Type of Expenditure`, "Total" = "total", "Cash benefits" = "cash", "Benefits in kind" = "service"))
socx_data <- read_csv("_raw/SOCX_AGG_20042020191205895.csv")
socx_data <- socx_data %>%
mutate(`Type of Expenditure` = recode(`Type of Expenditure`, "Total" = "total", "Cash benefits" = "cash", "Benefits in kind" = "service"))
View(socx_data)
unique(socx_data$Branch)
unique(socx_data$`Type of Programme`)
unique(socx_data$UNIT)
socx_data <- read_csv("_raw/SOCX_AGG_20042020191205895.csv")
socx_data <- socx_data %>%
mutate(`Type of Expenditure` = recode(`Type of Expenditure`, "Total" = "total", "Cash benefits" = "cash", "Benefits in kind" = "service")) %>%
mutate(Branch = recode(Branch, "Old age" = "age", "Family" = "family")) %>%
mutate(`Type of Programme` = recode(`Type of Programme`, "Total" = "total",
"Old age - Early retirement pension" = "early_retirement",
"Old age - Residential care / Home-help services" = "care",
"Old age - Pension" = "pension",
"Old age - Other cash benefits" = "other_cash",
"Old age - Other benefits in kind" = "other_services",
"Family - Family allowances" = "allowances",
"Family - Maternity and parental leave" = "leave",
"Family - Other cash benefits" = "other_cash",
"Family - Early childhood education and care (ECEC)" = "childcare",
"Family - Home help / Accomodation" = "accomodation",
"Family - Other benefits in kind" = "other_services")) %>%
mutate(UNIT = recode(UNIT, "PCT_GDP" = "pct_gdp"))
socx_data <- read_csv("_raw/SOCX_AGG_20042020191205895.csv")
socx_data <- socx_data %>%
mutate(`Type of Expenditure` = recode(`Type of Expenditure`, "Total" = "total", "Cash benefits" = "cash", "Benefits in kind" = "service")) %>%
mutate(Branch = recode(Branch, "Old age" = "age", "Family" = "family")) %>%
mutate(`Type of Programme` = recode(`Type of Programme`, "Total" = "total",
"Old age - Early retirement pension" = "early_retirement",
"Old age - Residential care / Home-help services" = "care",
"Old age - Pension" = "pension",
"Old age - Other cash benefits" = "other_cash",
"Old age - Other benefits in kind" = "other_services",
"Family - Family allowances" = "allowances",
"Family - Maternity and parental leave" = "leave",
"Family - Other cash benefits" = "other_cash",
"Family - Early childhood education and care (ECEC)" = "childcare",
"Family - Home help / Accomodation" = "accomodation",
"Family - Other benefits in kind" = "other_services")) %>%
mutate(UNIT = recode(UNIT, "PCT_GDP" = "pct_gdp")) %>%
mutate(varnames = paste(Branch, `Type of Programme`, `Type of Expenditure`, UNIT, sep = "_"))
unique(socx_data$varnames)
help(spread)
socx_data <- read_csv("_raw/SOCX_AGG_20042020191205895.csv")
socx_data <- socx_data %>%
mutate(`Type of Expenditure` = recode(`Type of Expenditure`, "Total" = "total", "Cash benefits" = "cash", "Benefits in kind" = "service")) %>%
mutate(Branch = recode(Branch, "Old age" = "age", "Family" = "family")) %>%
mutate(`Type of Programme` = recode(`Type of Programme`, "Total" = "total",
"Old age - Early retirement pension" = "early_retirement",
"Old age - Residential care / Home-help services" = "care",
"Old age - Pension" = "pension",
"Old age - Other cash benefits" = "other_cash",
"Old age - Other benefits in kind" = "other_services",
"Family - Family allowances" = "allowances",
"Family - Maternity and parental leave" = "leave",
"Family - Other cash benefits" = "other_cash",
"Family - Early childhood education and care (ECEC)" = "childcare",
"Family - Home help / Accomodation" = "accomodation",
"Family - Other benefits in kind" = "other_services")) %>%
mutate(UNIT = recode(UNIT, "PCT_GDP" = "pct_gdp")) %>%
mutate(varnames = paste(Branch, `Type of Programme`, `Type of Expenditure`, UNIT, sep = "_")) %>%
spread(varnames, Value)
socx_data <- read_csv("_raw/SOCX_AGG_20042020191205895.csv")
vtable::vt(socx_data)
socx_data <- socx_data %>%
mutate(`Type of Expenditure` = recode(`Type of Expenditure`, "Total" = "total", "Cash benefits" = "cash", "Benefits in kind" = "service")) %>%
mutate(Branch = recode(Branch, "Old age" = "age", "Family" = "family")) %>%
mutate(`Type of Programme` = recode(`Type of Programme`, "Total" = "total",
"Old age - Early retirement pension" = "early_retirement",
"Old age - Residential care / Home-help services" = "care",
"Old age - Pension" = "pension",
"Old age - Other cash benefits" = "other_cash",
"Old age - Other benefits in kind" = "other_services",
"Family - Family allowances" = "allowances",
"Family - Maternity and parental leave" = "leave",
"Family - Other cash benefits" = "other_cash",
"Family - Early childhood education and care (ECEC)" = "childcare",
"Family - Home help / Accomodation" = "accomodation",
"Family - Other benefits in kind" = "other_services")) %>%
mutate(UNIT = recode(UNIT, "PCT_GDP" = "pct_gdp")) %>%
mutate(varnames = paste(Branch, `Type of Programme`, `Type of Expenditure`, UNIT, sep = "_")) %>%
select(COUNTRY, YEAR, varnames, Value) %>%
spread(varnames, Value)
help("starts_with")
help("starts_with")
help("starts_with")
socx_data <- read_csv("_raw/SOCX_AGG_20042020191205895.csv")
socx_data <- socx_data %>%
mutate(`Type of Expenditure` = recode(`Type of Expenditure`, "Total" = "total", "Cash benefits" = "cash", "Benefits in kind" = "service")) %>%
mutate(Branch = recode(Branch, "Old age" = "age", "Family" = "family")) %>%
mutate(`Type of Programme` = recode(`Type of Programme`, "Total" = "total",
"Old age - Early retirement pension" = "early_retirement",
"Old age - Residential care / Home-help services" = "care",
"Old age - Pension" = "pension",
"Old age - Other cash benefits" = "other_cash",
"Old age - Other benefits in kind" = "other_services",
"Family - Family allowances" = "allowances",
"Family - Maternity and parental leave" = "leave",
"Family - Other cash benefits" = "other_cash",
"Family - Early childhood education and care (ECEC)" = "childcare",
"Family - Home help / Accomodation" = "accomodation",
"Family - Other benefits in kind" = "other_services")) %>%
mutate(UNIT = recode(UNIT, "PCT_GDP" = "pct_gdp")) %>%
mutate(varnames = paste(Branch, `Type of Programme`, `Type of Expenditure`, UNIT, sep = "_")) %>%
select(COUNTRY, YEAR, varnames, Value) %>%
select( starts_with("family"))
View(socx_data)
View(socx_data)
socx_data <- socx_data %>%
mutate(`Type of Expenditure` = recode(`Type of Expenditure`, "Total" = "total", "Cash benefits" = "cash", "Benefits in kind" = "service")) %>%
mutate(Branch = recode(Branch, "Old age" = "age", "Family" = "family")) %>%
mutate(`Type of Programme` = recode(`Type of Programme`, "Total" = "total",
"Old age - Early retirement pension" = "early_retirement",
"Old age - Residential care / Home-help services" = "care",
"Old age - Pension" = "pension",
"Old age - Other cash benefits" = "other_cash",
"Old age - Other benefits in kind" = "other_services",
"Family - Family allowances" = "allowances",
"Family - Maternity and parental leave" = "leave",
"Family - Other cash benefits" = "other_cash",
"Family - Early childhood education and care (ECEC)" = "childcare",
"Family - Home help / Accomodation" = "accomodation",
"Family - Other benefits in kind" = "other_services")) %>%
mutate(UNIT = recode(UNIT, "PCT_GDP" = "pct_gdp")) %>%
mutate(varnames = paste(Branch, `Type of Programme`, `Type of Expenditure`, UNIT, sep = "_")) %>%
select(COUNTRY, YEAR, varnames, Value)
socx_data <- read_csv("_raw/SOCX_AGG_20042020191205895.csv")
socx_data <- socx_data %>%
mutate(`Type of Expenditure` = recode(`Type of Expenditure`, "Total" = "total", "Cash benefits" = "cash", "Benefits in kind" = "service")) %>%
mutate(Branch = recode(Branch, "Old age" = "age", "Family" = "family")) %>%
mutate(`Type of Programme` = recode(`Type of Programme`, "Total" = "total",
"Old age - Early retirement pension" = "early_retirement",
"Old age - Residential care / Home-help services" = "care",
"Old age - Pension" = "pension",
"Old age - Other cash benefits" = "other_cash",
"Old age - Other benefits in kind" = "other_services",
"Family - Family allowances" = "allowances",
"Family - Maternity and parental leave" = "leave",
"Family - Other cash benefits" = "other_cash",
"Family - Early childhood education and care (ECEC)" = "childcare",
"Family - Home help / Accomodation" = "accomodation",
"Family - Other benefits in kind" = "other_services")) %>%
mutate(UNIT = recode(UNIT, "PCT_GDP" = "pct_gdp")) %>%
mutate(varnames = paste(Branch, `Type of Programme`, `Type of Expenditure`, UNIT, sep = "_")) %>%
select(COUNTRY, YEAR, varnames, Value)
socx_data <- read_csv("_raw/SOCX_AGG_20042020191205895.csv")
socx_data <- socx_data %>%
mutate(`Type of Expenditure` = recode(`Type of Expenditure`, "Total" = "total", "Cash benefits" = "cash", "Benefits in kind" = "service")) %>%
mutate(Branch = recode(Branch, "Old age" = "age", "Family" = "family")) %>%
mutate(`Type of Programme` = recode(`Type of Programme`, "Total" = "total",
"Old age - Early retirement pension" = "early_retirement",
"Old age - Residential care / Home-help services" = "care",
"Old age - Pension" = "pension",
"Old age - Other cash benefits" = "other_cash",
"Old age - Other benefits in kind" = "other_services",
"Family - Family allowances" = "allowances",
"Family - Maternity and parental leave" = "leave",
"Family - Other cash benefits" = "other_cash",
"Family - Early childhood education and care (ECEC)" = "childcare",
"Family - Home help / Accomodation" = "accomodation",
"Family - Other benefits in kind" = "other_services")) %>%
mutate(UNIT = recode(UNIT, "PCT_GDP" = "pct_gdp")) %>%
mutate(varnames = paste(Branch, `Type of Programme`, `Type of Expenditure`, UNIT, sep = "_")) %>%
select(COUNTRY, YEAR, varnames, Value)
View(socx_data)
socx_data <- socx_data %>%
mutate(`Type of Expenditure` = recode(`Type of Expenditure`, "Total" = "total", "Cash benefits" = "cash", "Benefits in kind" = "service")) %>%
mutate(Branch = recode(Branch, "Old age" = "age", "Family" = "family")) %>%
mutate(`Type of Programme` = recode(`Type of Programme`, "Total" = "total",
"Old age - Early retirement pension" = "early_retirement",
"Old age - Residential care / Home-help services" = "care",
"Old age - Pension" = "pension",
"Old age - Other cash benefits" = "other_cash",
"Old age - Other benefits in kind" = "other_services",
"Family - Family allowances" = "allowances",
"Family - Maternity and parental leave" = "leave",
"Family - Other cash benefits" = "other_cash",
"Family - Early childhood education and care (ECEC)" = "childcare",
"Family - Home help / Accomodation" = "accomodation",
"Family - Other benefits in kind" = "other_services")) %>%
mutate(UNIT = recode(UNIT, "PCT_GDP" = "pct_gdp")) %>%
mutate(varnames = paste(Branch, `Type of Programme`, `Type of Expenditure`, UNIT, sep = "_")) %>%
select(COUNTRY, YEAR, varnames, Value) %>%
filter(varnames, starts_with("family"))
socx_data <- read_csv("_raw/SOCX_AGG_20042020191205895.csv")
socx_data <- socx_data %>%
mutate(`Type of Expenditure` = recode(`Type of Expenditure`, "Total" = "total", "Cash benefits" = "cash", "Benefits in kind" = "service")) %>%
mutate(Branch = recode(Branch, "Old age" = "age", "Family" = "family")) %>%
mutate(`Type of Programme` = recode(`Type of Programme`, "Total" = "total",
"Old age - Early retirement pension" = "early_retirement",
"Old age - Residential care / Home-help services" = "care",
"Old age - Pension" = "pension",
"Old age - Other cash benefits" = "other_cash",
"Old age - Other benefits in kind" = "other_services",
"Family - Family allowances" = "allowances",
"Family - Maternity and parental leave" = "leave",
"Family - Other cash benefits" = "other_cash",
"Family - Early childhood education and care (ECEC)" = "childcare",
"Family - Home help / Accomodation" = "accomodation",
"Family - Other benefits in kind" = "other_services")) %>%
mutate(UNIT = recode(UNIT, "PCT_GDP" = "pct_gdp")) %>%
mutate(varnames = paste(Branch, `Type of Programme`, `Type of Expenditure`, UNIT, sep = "_")) %>%
select(COUNTRY, YEAR, varnames, Value) %>%
filter(varnames, starts_with("family"))
socx_data <- read_csv("_raw/SOCX_AGG_20042020191205895.csv")
socx_data <- read_csv("_raw/SOCX_AGG_20042020191205895.csv")
socx_data <- socx_data %>%
mutate(`Type of Expenditure` = recode(`Type of Expenditure`, "Total" = "total", "Cash benefits" = "cash", "Benefits in kind" = "service")) %>%
mutate(Branch = recode(Branch, "Old age" = "age", "Family" = "family")) %>%
mutate(`Type of Programme` = recode(`Type of Programme`, "Total" = "total",
"Old age - Early retirement pension" = "early_retirement",
"Old age - Residential care / Home-help services" = "care",
"Old age - Pension" = "pension",
"Old age - Other cash benefits" = "other_cash",
"Old age - Other benefits in kind" = "other_services",
"Family - Family allowances" = "allowances",
"Family - Maternity and parental leave" = "leave",
"Family - Other cash benefits" = "other_cash",
"Family - Early childhood education and care (ECEC)" = "childcare",
"Family - Home help / Accomodation" = "accomodation",
"Family - Other benefits in kind" = "other_services")) %>%
mutate(UNIT = recode(UNIT, "PCT_GDP" = "pct_gdp")) %>%
filter(Branch == "family") %>%
mutate(varnames = paste(Branch, `Type of Programme`, `Type of Expenditure`, UNIT, sep = "_")) %>%
select(COUNTRY, YEAR, varnames, Value) %>%
spread(varnames, Value)
View(socx_data)
socx_data <- read_csv("_raw/SOCX_AGG_20042020191205895.csv")
socx_data <- socx_data %>%
mutate(`Type of Expenditure` = recode(`Type of Expenditure`, "Total" = "total", "Cash benefits" = "cash", "Benefits in kind" = "service")) %>%
mutate(Branch = recode(Branch, "Old age" = "age", "Family" = "family")) %>%
mutate(`Type of Programme` = recode(`Type of Programme`, "Total" = "total",
"Old age - Early retirement pension" = "early_retirement",
"Old age - Residential care / Home-help services" = "care",
"Old age - Pension" = "pension",
"Old age - Other cash benefits" = "other_cash",
"Old age - Other benefits in kind" = "other_services",
"Family - Family allowances" = "allowances",
"Family - Maternity and parental leave" = "leave",
"Family - Other cash benefits" = "other_cash",
"Family - Early childhood education and care (ECEC)" = "childcare",
"Family - Home help / Accomodation" = "accomodation",
"Family - Other benefits in kind" = "other_services")) %>%
mutate(UNIT = recode(UNIT, "PCT_GDP" = "pct_gdp")) %>%
filter(Branch == "family") %>%
mutate(varnames = paste(Branch, `Type of Expenditure`, `Type of Programme`, UNIT, sep = "_")) %>%
select(COUNTRY, YEAR, varnames, Value) %>%
spread(varnames, Value)
variable.names(socx_data)
library(tidyverse)
socx_data <- read_csv("_raw/SOCX_AGG_20042020191205895.csv")
socx_data <- socx_data %>%
mutate(`Type of Expenditure` = recode(`Type of Expenditure`, "Total" = "total", "Cash benefits" = "cash", "Benefits in kind" = "service")) %>%
mutate(Branch = recode(Branch, "Old age" = "age", "Family" = "family")) %>%
mutate(`Type of Programme` = recode(`Type of Programme`, "Total" = "total",
"Old age - Early retirement pension" = "early_retirement",
"Old age - Residential care / Home-help services" = "care",
"Old age - Pension" = "pension",
"Old age - Other cash benefits" = "other_cash",
"Old age - Other benefits in kind" = "other_services",
"Family - Family allowances" = "allowances",
"Family - Maternity and parental leave" = "leave",
"Family - Other cash benefits" = "other_cash",
"Family - Early childhood education and care (ECEC)" = "childcare",
"Family - Home help / Accomodation" = "accomodation",
"Family - Other benefits in kind" = "other_services")) %>%
mutate(UNIT = recode(UNIT, "PCT_GDP" = "pct_gdp")) %>%
filter(Branch == "family") %>%
mutate(varnames = paste(Branch, `Type of Expenditure`, `Type of Programme`, UNIT, sep = "_")) %>%
select(COUNTRY, YEAR, varnames, Value) %>%
spread(varnames, Value)
View(socx_data)
variable.names(socx_data)
# Der niedrigsten und höchsten Ausgaben im Jahr 2015 für formale Kinderbetreuung
socx_data %>%
filter(YEAR == 2010) %>%
summarise(family_service_childcare_pct_gdp, niedrigste = min(), hoechste = max())
# Der niedrigsten und höchsten Ausgaben im Jahr 2015 für formale Kinderbetreuung
socx_data %>%
filter(YEAR == 2010) %>%
summarise(niedrigste = min(family_service_childcare_pct_gdp),
hoechste = max(family_service_childcare_pct_gdp))
